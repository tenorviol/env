#!/usr/bin/env perl
#
# Copyright (C) 2011 by Christopher Johnson
# 
# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
# 
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
# 
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
 
#
# generate a random password 10 (or -n) characters long
#

use Getopt::Std;

getopts("n:");

# -n number of characters option
if ($opt_n =~ /^[1-9]\d*$/) {
  $n = $opt_n;
} elsif ($opt_n) {
  die "-n should be a positive integer\n";
} else {
  $n = 10;
}

# TODO: accept character set parameter
#$set = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz0123456789!@#\$%^&*()-_=+";
$set = "ABCDEFGHIJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz123456789_";

# read random characters from source
$source = "/dev/random";
open RAND, $source or die "$!, $source\n";
for ($i = 0; $i < $n; $i++) {
  read RAND, $ch, 1;
  print substr($set, ord($ch) % length($set), 1);
}
print "\n";
close RAND;

exit 0;
